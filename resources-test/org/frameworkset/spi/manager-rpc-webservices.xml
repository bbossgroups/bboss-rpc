<properties>
     <!-- 
		标记是否启用webservice服务，为false时，启动cxf的serverlet将失效
	 -->	
	<property name="rpc.webservice.enable" value="true"/>	
	
	<!-- 
		webservice rpc服务请求和响应处理类
	 -->
	<property name="rpc.webservice.RPCServerIoHandler" singlable="true" class="org.frameworkset.spi.remote.webservice.RPCWebserviceIOHandler">	
		<construction>
			<property name="name" 
				      value="RPCWebserviceIOHandler" class="String"/>				
			<property name="request_handler" 
				      refid="attr:rpc.request_handler" />	
			<property name="webservice_server_type" 
				      value="cxf" />		      			
			<property name="localaddress" 
				      value="http://localhost:8080/WebRoot/cxfservices" />	      
		</construction>			
	</property>
	
	
	<!-- 
		系统发布的webservice服务配置
	 -->
	<property name="cxf.webservices.config">
		<list>
		<!-- 
			webservice RPC服务,用来实现业务组件之间的远程服务调用
			属性说明：
			name 服务的唯一标识名称
			singleable 服务组件的单列模式
			servicePort 发布的服务端口	
			class 服务的实现类
			mtom 服务是否支持附件传输 
				true：支持，false：不支持		
		 -->
			
		</list>
	</property>
	
	<property name="cxf.client.config" enable="true">
		<map>
			<property label="connectionTimeout " name="connectionTimeout"
				value="30000" class="long">
				<description> <![CDATA[Specifies the amount of time, in milliseconds, that the client will attempt to establish a connection before it times out. The default is 30000 (30 seconds). 
0 specifies that the client will continue to attempt to open a connection indefinitely. ]]></description>
			</property>
			<property label="receiveTimeout" name="receiveTimeout"
				value="60000" class="long">
				<description> <![CDATA[Specifies the amount of time, in milliseconds, that the client will wait for a response before it times out. The default is 60000. 
0 specifies that the client will wait indefinitely. ]]></description>
			</property>
			<property label="autoRedirect" name="autoRedirect"
				value="false" class="boolean">
				<description> <![CDATA[Specifies if the client will automatically follow a server issued redirection. The default is false. ]]></description>
			</property>
			<property label="maxRetransmits" name="maxRetransmits"
				value="-1" class="int">
				<description> <![CDATA[Specifies the maximum number of times a client will retransmit a request to satisfy a redirect. The default is -1 which specifies that unlimited retransmissions are allowed. ]]></description>
			</property>
			<property label="allowChunking" name="allowChunking"
				value="true" class="boolean">
				<description> <![CDATA[Specifies whether the client will send requests using chunking. The default is true which specifies that the client will use chunking when sending requests. 
Chunking cannot be used used if either of the following are true: 
http-conf:basicAuthSupplier is configured to provide credentials preemptively. 
AutoRedirect is set to true. 
In both cases the value of AllowChunking is ignored and chunking is disallowed. 
See note about chunking below. ]]></description>
			</property>
<!--			<property label="proxyServer" name="proxyServer"-->
<!--				value="172.16.17.1" class="String">-->
<!--				<description> <![CDATA[Specifies the URL of the proxy server through which requests are routed. ]]></description>-->
<!--			</property>-->
<!--			<property label="proxyServerPort" name="proxyServerPort"-->
<!--				value="808" class="int">-->
<!--				<description> <![CDATA[Specifies the port number of the proxy server through which requests are routed. ]]></description>-->
<!--			</property>-->
<!--			<property label="proxyServerType" name="proxyServerType"-->
<!--				value="SOCKS" >-->
				<!-- 
					指定属性注入时的属性编辑和转换器
					
					系统默认支持字符串向其他基本类行转换:					 
					 * int,char,short,double,float,long,boolean,byte
					 * java.sql.Date,java.util.Date,
					 * Integer
					 * Long
					 * Float
					 * Short
					 * Double
					 * Character
					 * Boolean
					 * Byte
					如果不是基本数据类型那就需要通过自定义的属性编辑器来实现，属性编辑器必需实现接口:
						com.frameworkset.util.EditorInf
						
						Object getValueFromObject(Object fromValue) ;    
    					Object getValueFromString(String fromValue);
				 -->
<!--				<editor class="org.frameworkset.spi.remote.webservice.ProxyServerTypeEditor"/>-->
<!--				<description> <![CDATA[Specifies the type of proxy server used to route requests. Valid values are: -->
<!--				HTTP(default) -->
<!--				SOCKS -->
<!--				]]></description>-->
<!--			</property>-->
		</map>
	</property>
	
	<property  name="ws.ssl.config" enable="false">
		<map>
			<property name="keyManagers" keyPassword="password">
				<list>
					<property name="keyStore1" type="JKS" password="password" file="src/test/java/org/apache/cxf/systest/http/resources/Morpit.jks"/>
				</list>
			</property>
			
			<property name="trustManagers" keyPassword="password">
				<list>
					<property name="keyStore1" type="JKS" password="password" file="src/test/java/org/apache/cxf/systest/http/resources/Truststore.jks"/>
				</list>
			</property>
			
			<property name="cipherSuitesFilter">
				<list>
					<property value=".*_EXPORT1024_.*"/>
			        <property value=".*_WITH_DES_.*"/>
			        <property value=".*_WITH_NULL_.*"/>
			        <property value=".*_DH_anon_.*"/>
				</list>
			</property>
			
			<property name="userName" value="Betty"/>
				
			<property name="password" value="password"/>
		<!-- 
			<http:tlsClientParameters>
	      <sec:keyManagers keyPassword="password">
	           <sec:keyStore type="JKS" password="password"
	                file="src/test/java/org/apache/cxf/systest/http/resources/Morpit.jks"/>
	      </sec:keyManagers>
	      <sec:trustManagers>
	          <sec:keyStore type="JKS" password="password"
	               file="src/test/java/org/apache/cxf/systest/http/resources/Truststore.jks"/>
	      </sec:trustManagers>
	      <sec:cipherSuitesFilter>-->
	        <!-- these filters ensure that a ciphersuite with
	          export-suitable or null encryption is used,
	          but exclude anonymous Diffie-Hellman key change as
	          this is vulnerable to man-in-the-middle attacks -->
	  <!--      <sec:include>.*_EXPORT_.*</sec:include>
	        <sec:include>.*_EXPORT1024_.*</sec:include>
	        <sec:include>.*_WITH_DES_.*</sec:include>
	        <sec:include>.*_WITH_NULL_.*</sec:include>
	        <sec:exclude>.*_DH_anon_.*</sec:exclude>
	      </sec:cipherSuitesFilter>
	  </http:tlsClientParameters>
	  <http:authorization>
	     <sec:UserName>Betty</sec:UserName>
	     <sec:Password>password</sec:Password>
	  </http:authorization>
			
		 -->
			<property>
			</property>
		</map>
	</property>
</properties>