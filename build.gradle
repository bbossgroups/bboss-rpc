	group = PROJ_GROUP
	version = PROJ_VERSION	
	
	
	apply plugin: "java"
	apply plugin: "maven-publish"
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: "signing"
	apply plugin: "java-library"
	eclipse {
		jdt {
			//if you want to alter the java versions (by default they are configured with gradle java plugin settings):
			sourceCompatibility = SOURCE_COMPILER_LEVEL
			targetCompatibility = TARGET_COMPILER_LEVEL
			javaRuntimeName = "../../org.eclipse.jdt.launching.JRE_CONTAINER"

		}
	}

	tasks.withType(JavaCompile) {
		
		sourceCompatibility = SOURCE_COMPILER_LEVEL
		targetCompatibility = TARGET_COMPILER_LEVEL
		options.encoding = 'UTF-8'
	}

	tasks.withType(Javadoc) {
		sourceCompatibility = JAVADOC_SOURCE_LEVEL
		targetCompatibility = JAVADOC_COMPILER_LEVEL
		options.encoding = 'UTF-8'
		// disable the crazy super-strict doclint tool in Java 8
        // noinspection SpellCheckingInspection
		if (JavaVersion.current().isJava8Compatible()) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}

	jar {
		manifest {
			attributes (
					'Implementation': version,
					'Specification-Version': version,
					'Implementation-Vendor': 'bbossgroups',
					'Implementation-ProductID': project.name,
					'Compile-Timestamp': new Date().format('yyyy-MM-dd HH:mm:ss'),
					'Compile-User': DEVELOPER_NAME
			)
		}
	}


	dependencies {
		testImplementation 'junit:junit:4.13.1'
	}

	repositories {
		mavenLocal()
		 maven {
	        url "https://maven.aliyun.com/nexus/content/groups/public"
	    }
		mavenCentral()
		
	}
	if(project.getProperty('skipTest'))
	{
		compileTestJava.enabled=false
		processTestResources.enabled=false
		testClasses.enabled = false
		test.enabled = false  
	}
	
	
sourceSets {
    main {
        java {
            srcDir 'src'
            srcDir 'src-camel'
          	srcDir 'src-cxf'
          	srcDir 'src-http'
          	srcDir 'src-jgroups'
          	srcDir 'src-jms'
          	srcDir 'src-mina'
          	srcDir 'src-netty'
          	srcDir 'src-rmi'
          	srcDir 'src-thread'
        }
        resources {
           srcDir 'resources' 
            
        }
       
    }
    test {
        java {
            srcDir 'test'
        }
        resources{
        	srcDir 'resources-test'
        }
    }
    
}

dependencies {
	
    api (
            [group: 'com.bbossgroups', name: 'bboss-util', version: "${BBOSS_VERSION}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-core', version: "${BBOSS_VERSION}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-soa', version: "${BBOSS_VERSION}", transitive: false],
			[group: 'com.bbossgroups', name: 'bboss-http', version: "${BBOSS_VERSION}", transitive: true],

//[group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25', transitive: false],
           	[group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25', transitive: true],      
            [group: 'oro', name: 'oro', version: '2.0.8', transitive: false],         
            [group: 'cglib', name: 'cglib-nodep', version: '3.1', transitive: false],
              [group: 'commons-lang', name: 'commons-lang', version: '2.6', transitive: false],
             [group: 'commons-logging', name: 'commons-logging', version: '1.1', transitive: false],
           [group: 'com.caucho', name: 'hessian', version: '4.0.38', transitive: false],
           [group: 'org.jboss.netty', name: 'netty', version: '3.2.10.Final', transitive: false],
			//[group: 'io.netty', name: 'netty-all', version: '4.1.8.Final', transitive: false],
           [group: 'org.apache.mina', name: 'mina-core', version: '2.0.0-RC1', transitive: true],
           [group: 'org.ow2.asm', name: 'asm', version: '5.0.3', transitive: true],
            [group: 'bsh', name: 'bsh', version: '2.0b1', transitive: false],
            [group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1', transitive: false],
             
//            [group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.0.1', transitive: false],
//            [group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.0.1', transitive: false],
            [group: 'org.apache.httpcomponents', name: 'httpcore-nio', version: '4.4.5', transitive: false],
//            [group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.1.3', transitive: false],
//            [group: 'commons-codec', name: 'commons-codec', version: '1.10', transitive: false],
           [group: 'com.ibm.icu', name: 'icu4j', version: '2.6.1', transitive: false],
            [group: 'org.jasypt', name: 'jasypt', version: '1.9.2', transitive: false],
           
              [group: 'commons-pool', name: 'commons-pool', version: '1.5.4', transitive: false],
           
            //[group: 'org.apache.cxf', name: 'cxf-core', version: '3.1.0', transitive: false],
             [group: 'org.apache.cxf', name: 'cxf-rt-bindings-soap', version: '3.1.0', transitive: false],
             [group: 'org.apache.cxf', name: 'cxf-rt-databinding-jaxb', version: '3.1.0', transitive: false],
             [group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version: '3.1.0', transitive: false],
             [group: 'org.apache.cxf', name: 'cxf-rt-frontend-simple', version: '3.1.0', transitive: false],
             [group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version: '3.1.0', transitive: false],
             [group: 'org.apache.cxf', name: 'cxf-rt-wsdl', version: '3.1.0', transitive: false],
            [group: 'org.apache.geronimo.specs', name: 'geronimo-jaxws_2.2_spec', version: '1.1', transitive: false],
            [group: 'org.apache.geronimo.specs', name: 'geronimo-jms_1.1_spec', version: '1.1.1', transitive: false],
             [group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0-m10', transitive: false],
            [group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.12', transitive: false],
            [group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.2.11', transitive: false],
            [group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.2.11', transitive: false],
            [group: 'com.sun.xml.bind', name: 'jaxb-xjc', version: '2.2.11', transitive: false],
            [group: 'org.apache.neethi', name: 'neethi', version: '3.0.3', transitive: false],
            [group: 'org.codehaus.woodstox', name: 'stax2-api', version: '3.1.1', transitive: false],
            [group: 'org.codehaus.woodstox', name: 'woodstox-core-asl', version: '4.2.0', transitive: false],
            [group: 'wsdl4j', name: 'wsdl4j', version: '1.6.3', transitive: false],
            [group: 'xml-resolver', name: 'xml-resolver', version: '1.2', transitive: false],
            [group: 'org.apache.ws.xmlschema', name: 'xmlschema-core', version: '2.2.1', transitive: false],
            fileTree(dir: 'lib', include: '**/*.jar'),
    )
	testImplementation(
    		[group: 'xpp3', name: 'xpp3', version: '1.1.4c', transitive: false],
            [group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.3.1', transitive: false],
             [group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.10',transitive: true],
             [group: 'com.caucho', name: 'hessian', version: '4.0.7', transitive: false]
    )
    
     compileOnly (            
          [group: 'org.apache.geronimo.specs', name: 'geronimo-servlet_3.0_spec', version: '1.0', transitive: false],
              [group: 'org.apache.geronimo.specs', name: 'geronimo-j2ee-management_1.0_spec', version: '1.0', transitive: false],
             [group: 'org.springframework', name: 'spring-beans', version: '2.5.5', transitive: false],
             [group: 'org.springframework', name: 'spring-context', version: '2.5.5', transitive: false],
             [group: 'org.springframework', name: 'spring-core', version: '2.5.5', transitive: false],
             [group: 'org.springframework', name: 'spring-web', version: '2.5.5', transitive: false],
              [group: 'org.apache.activemq', name: 'activeio-core', version: '3.1.2', transitive: false],
            [group: 'org.apache.activemq', name: 'activemq-camel', version: '5.5.0', transitive: false],
            [group: 'org.apache.activemq', name: 'activemq-core', version: '5.5.0', transitive: false],
            [group: 'org.apache.activemq', name: 'activemq-console', version: '5.5.0', transitive: false],
            [group: 'org.apache.activemq', name: 'activemq-jmdns_1.0', version: '5.5.0', transitive: false],
            [group: 'org.apache.activemq', name: 'activemq-optional', version: '5.5.0', transitive: false],
            [group: 'org.apache.activemq', name: 'activemq-pool', version: '5.5.0', transitive: false],
            [group: 'org.apache.activemq', name: 'activemq-web', version: '5.5.0', transitive: false],
            [group: 'org.apache.activemq', name: 'activemq-xmpp', version: '5.5.0', transitive: false],
            [group: 'org.apache.activemq', name: 'activemq-jaas', version: '5.5.0', transitive: false],
             [group: 'org.apache.camel', name: 'camel-core', version: '2.2.0', transitive: false],
            [group: 'org.apache.camel', name: 'camel-jms', version: '2.2.0', transitive: false],
            
    )
    
}
	task sourcesJar(type: Jar) {
		archiveClassifier = "sources"
		from sourceSets.main.allJava
	}

	task javaDocJar(type: Jar, dependsOn: javadoc) {
		archiveClassifier = "javadoc"
		from javadoc.destinationDir
	}
	artifacts {
	    archives sourcesJar, javaDocJar
	}
	publishing {
		publications {
			mavenJava(MavenPublication) {
				groupId project.group
				artifactId project.name
				version "${version}"
				from components.java
				artifact sourcesJar
				artifact javaDocJar
//				versionMapping {
//					usage('java-api') {
//						fromResolutionOf('runtimeClasspath')
//					}
//					usage('java-runtime') {
//						fromResolutionResult()
//					}
//				}
//				from components.java
				pom {
					name = project.name
					packaging = 'jar'
					// optionally artifactId can be defined here
					description = PROJ_DESCRIPTION
					url = PROJ_WEBSITEURL

					scm {
						connection = scm_connection
						developerConnection = scm_developerConnection
						url = scm_url
					}

					licenses {
						license {
							name = PROJ_LICENCE_NAME
							url = PROJ_LICENCE_URL
						}
					}

					developers {
						developer {
							id = DEVELOPER_ID
							name = DEVELOPER_NAME
							email = DEVELOPER_EMAIL
						}
					}

				}
			}
		}
		repositories {
//			maven {
//				// change URLs to point to your repos, e.g. http://my.org/repo
//				def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
//				def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
//				url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//			}
			maven {
				// change URLs to point to your repos, e.g. http://my.org/repo
				allowInsecureProtocol=true
				url = sonatype_url
				credentials {
					username = sonatype_username
					password = sonatype_password
				}

			}

		}
	}

	signing {
		sign publishing.publications.mavenJava
//		sign configurations.archives
	}
